name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
    - name: Update Rust
      run: rustup update stable
    - uses: actions/checkout@v4
    - name: Install LLVM and Clang
      uses: KyleMayes/install-llvm-action@v1
      with:
        version: "15.0"
    - name: Build
      run: cargo build --verbose --all-features --all-targets
    - name: Check formatting
      run: cargo fmt -- --check
    - name: Run Clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
    - name: Run tests
      run: cargo test --verbose --all-targets --all-features

  windows:
    runs-on: windows-latest
    defaults:
      run:
        shell: msys2 {0}
    steps:
    - uses: msys2/setup-msys2@v2
      with:
        path-type: inherit
        update: true
        install: >-
          diffutils
          m4
          make
          base-devel
          mingw-w64-x86_64-toolchain
    - uses: actions/checkout@v4
    - name: Setup Rust
      run: |
        rustup install stable-x86_64-pc-windows-gnu
        rustup default stable-x86_64-pc-windows-gnu
        rustup component add rustfmt
        rustup component add clippy
    - name: Build
      env:
        CC: gcc
        CXX: g++
      run: |
        echo $PATH
        which gcc
        cargo build --verbose --all-targets
    - name: Check formatting
      run: cargo fmt -- --check
    - name: Run tests
      run: cargo test --verbose --all-targets

  macos:
    runs-on: macos-latest
    steps:
    - name: Set up Homebrew
      id: set-up-homebrew
      uses: Homebrew/actions/setup-homebrew@master
    - name: Install Homebrew Dependencies
      run: brew install gcc cmake llvm@15 gmp
    - name: Update Rust
      run: rustup update stable
    - uses: actions/checkout@v4
    - name: Build
      run: cargo build --verbose --all-features --all-targets
    - name: Check formatting
      run: cargo fmt -- --check
    - name: Run Clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
    - name: Run tests
      run: cargo test --verbose --all-targets --all-features
